<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.5</version>
		<relativePath/>
	</parent>
	<groupId>pl.edu.pk.cosmo.habsatbackend</groupId>
	<artifactId>post-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>post-service</name>
	<description>post-service</description>
	<properties>
		<java.version>11</java.version>
		<spring-boot-starter.version>2.7.5</spring-boot-starter.version>
		<spring-boot-starter-test.version>2.7.5</spring-boot-starter-test.version>						
		<spring-boot-starter-web.version>2.7.5</spring-boot-starter-web.version>
		<spring-boot-starter-validation.version>2.7.5</spring-boot-starter-validation.version>
		<spring-boot-starter-data-mongodb.version>3.0.0</spring-boot-starter-data-mongodb.version>
		<spring-boot-devtools.version>2.7.5</spring-boot-devtools.version>
		<spring-boot-maven-plugin.version>2.7.5</spring-boot-maven-plugin.version>
		<spring-cloud-starter-aws.version>2.2.6.RELEASE</spring-cloud-starter-aws.version>
		<spring-cloud-starter-netflix-eureka-client.version>3.1.4</spring-cloud-starter-netflix-eureka-client.version>
		<springdoc-openapi-ui.version>1.6.12</springdoc-openapi-ui.version>
		<lombok.version>1.18.24</lombok.version>
		<javafaker.version>1.0.2</javafaker.version>
		<assertj-db.version>2.0.2</assertj-db.version>
		<go-offline-maven-plugin.version>1.2.8</go-offline-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring-boot-starter.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot-starter-test.version}</version>
			<scope>test</scope>
		</dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot-starter-web.version}</version>
        </dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<version>${spring-boot-starter-validation.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<version>${spring-cloud-starter-netflix-eureka-client.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>${spring-boot-devtools.version}</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-aws</artifactId>
			<version>${spring-cloud-starter-aws.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.javafaker</groupId>
			<artifactId>javafaker</artifactId>
			<version>${javafaker.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-db</artifactId>
			<version>${assertj-db.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc-openapi-ui.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
			<version>${spring-boot-starter-data-mongodb.version}</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>app</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot-maven-plugin.version}</version>
				<configuration>
					<excludeDevtools>false</excludeDevtools>
				</configuration>
			</plugin>

			<plugin>
				<groupId>de.qaware.maven</groupId>
				<artifactId>go-offline-maven-plugin</artifactId>
				<version>${go-offline-maven-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
